/**
 * NEVESOMO –®–∏—Ñ—Ç—ã 2025 - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
 * @author Igor Konovalchik
 * @version 2.0
 */

// ============================================================================
// –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ============================================================================

const CONFIG = {
    DEADLINE: '2025-07-08T23:59:59',
    LOADING_DELAYS: {
        LOGO_DISPLAY: 2000,
        CONTENT_FADE: 500,
        TEXT_CHANGE: 1000,
        SCREEN_HIDE: 500
    },
    LOADING_TEXTS: [
        '–ì—Ä—É–∑–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...',
        '–ó–∞–≥—Ä—É–∂–∞–µ–º —à–∏—Ñ—Ç—ã...',
        '–¢—É–ø–∏–º...'
    ],
    TOOLTIP_TIMEOUT: 3000,
    SCROLL_THRESHOLD: 10
};

// ============================================================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø
// ============================================================================

/** @type {Object.<string, string>} –§–∏–ª—å—Ç—Ä—ã —Å–µ—Å—Å–∏–π */
let sessionFilters = {};

/** @type {string} –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å */
let currentUser = '';

/** @type {string} –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º (user/admin) */
let currentMode = 'user';

// ============================================================================
// –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
// ============================================================================

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @async
 * @returns {Promise<void>}
 */
async function init() {
    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è NEVESOMO...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—Å—Ç–∞–≤–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
        await showLoadingScreen();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Airtable
        await loadAirtableData();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        initializeGlobalState();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        initializeComponents();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        loadUserPreferences();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        startBackgroundProcesses();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        initializeEventHandlers();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateInterface();
        
        updateFooterVersion();
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞—Å—Ç–∞–≤–∫—É
        hideLoadingScreen();
        
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showLoadingError();
    }
}

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –°–û–°–¢–û–Ø–ù–ò–Ø
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
function initializeGlobalState() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (typeof window.currentUser === 'undefined') {
        window.currentUser = '';
    }
    if (typeof window.currentMode === 'undefined') {
        window.currentMode = 'user';
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    currentUser = window.currentUser;
    currentMode = window.currentMode;
    
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', {
        currentUser,
        currentMode
    });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
function initializeComponents() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    initializeParticipantsSelector();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Å–µ—Å—Å–∏–π
    initializeSessionFilters();
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
function loadUserPreferences() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
    const savedTheme = localStorage.getItem('theme') || 'light';
    setTheme(savedTheme);
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
 */
function startBackgroundProcesses() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç
    startCountdown();
}

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–ò–õ–¨–¢–†–û–í –ò –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã —Å–µ—Å—Å–∏–π
 */
function initializeSessionFilters() {
    sessionFilters = {};
    
    if (schedule) {
        Object.keys(schedule).forEach(day => {
            schedule[day].forEach(session => {
                const sessionKey = `${day}_${session.time}`;
                sessionFilters[sessionKey] = 'all';
            });
        });
    }
    
    // –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
    window.sessionFilters = sessionFilters;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
 */
function initializeEventHandlers() {
    initializeSessionHandlers();
    initializeMenuHandlers();
    initializeThemeHandlers();
    initializePopupHandlers();
    initializeUserHandlers();
    initializeTouchHandlers();
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–ï–°–°–ò–ô
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–µ—Å—Å–∏–π
 */
function initializeSessionHandlers() {
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏
    window.toggleSession = toggleSession;
    window.setSessionFilter = setSessionFilter;
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (—Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞/—Å–≤–µ—Ä–Ω—É—Ç–∞)
 * @param {string} sessionKey - –ö–ª—é—á —Å–µ—Å—Å–∏–∏
 */
function toggleSession(sessionKey) {
    const sessionElement = document.querySelector(`[data-session="${sessionKey}"]`);
    if (!sessionElement) return;
    
    const isCurrentlyExpanded = sessionElement.classList.contains('expanded');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å–µ—Å—Å–∏–∏
    document.querySelectorAll('.session.expanded').forEach(session => {
        session.classList.remove('expanded');
    });
    
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ—ë
    if (!isCurrentlyExpanded) {
        sessionElement.classList.add('expanded');
    }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —Å–µ—Å—Å–∏–∏
 * @param {string} sessionKey - –ö–ª—é—á —Å–µ—Å—Å–∏–∏
 * @param {string} filter - –§–∏–ª—å—Ç—Ä (all, banking, care, etc.)
 */
function setSessionFilter(sessionKey, filter) {
    sessionFilters[sessionKey] = filter;
    
    const sessionElement = document.querySelector(`[data-session="${sessionKey}"]`);
    if (sessionElement) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        sessionElement.querySelectorAll('.session-tab').forEach(tab => {
            tab.classList.remove('active');
        });
        
        const filterTab = sessionElement.querySelector(`[data-filter="${filter}"]`);
        if (filterTab) {
            filterTab.classList.add('active');
        }
    }
    
    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ä–æ–ª–∏ —Å–µ—Å—Å–∏–∏
    const container = document.getElementById(`roles-${sessionKey}`);
    if (container) {
        const html = renderSessionRoles(sessionKey, filter);
        container.innerHTML = html;
    }
    
    updateSessionTabs(sessionKey);
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ú–ï–ù–Æ
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é
 */
function initializeMenuHandlers() {
    window.toggleMenu = toggleMenu;
    window.closeMenu = closeMenu;
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é
 */
function toggleMenu() {
    const menuOverlay = document.getElementById('menuOverlay');
    if (menuOverlay) {
        menuOverlay.classList.toggle('show');
    }
}

/**
 * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é
 */
function closeMenu() {
    const menuOverlay = document.getElementById('menuOverlay');
    if (menuOverlay) {
        menuOverlay.classList.remove('show');
    }
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –¢–ï–ú–´
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–º—ã
 */
function initializeThemeHandlers() {
    window.toggleTheme = toggleTheme;
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {string} theme - –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã (light/dark)
 */
function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
    
    const themeToggle = document.querySelector('.theme-toggle');
    if (themeToggle) {
        themeToggle.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
    }
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ü–û–ü–ê–ü–û–í
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–ø–∞–ø–æ–≤
 */
function initializePopupHandlers() {
    // –§—É–Ω–∫—Ü–∏–∏ –ø–æ–ø–∞–ø–æ–≤
    window.openMySchedule = openMySchedule;
    window.openStatsPopup = openStatsPopup;
    window.openSchedulePopup = openSchedulePopup;
    window.closeStatsPopup = closeStatsPopup;
    window.closeSchedulePopup = closeSchedulePopup;
    window.openRolesInfoPopup = openRolesInfoPopup;
    window.closeRolesInfoPopup = closeRolesInfoPopup;
    window.showRoleDetail = showRoleDetail;
    window.closeRoleDetailPopup = closeRoleDetailPopup;
    window.openDataEditPopup = openDataEditPopup;
    window.shareSchedule = shareSchedule;
    window.openUserScheduleFromStats = openUserScheduleFromStats;
    window.openCommentPopup = openCommentPopup;
    window.closeCommentPopup = closeCommentPopup;
    window.skipComment = skipComment;
    window.saveComment = saveComment;
    window.showConfirmation = showConfirmation;
    window.closeConfirmPopup = closeConfirmPopup;
    window.showNotification = showNotification;
    window.completeAssignment = completeAssignment;
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
function initializeUserHandlers() {
    // –§—É–Ω–∫—Ü–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π
    window.handleRoleSlotClick = handleRoleSlotClick;
    window.selectParticipant = selectParticipant;
    window.autoFillSession = autoFillSession;
    window.closeParticipantPopup = closeParticipantPopup;
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    window.setMode = setMode;
    window.updateView = updateView;
    window.showBathInfo = showBathInfo;
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    window.currentMode = currentMode;
    window.currentUser = currentUser;
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò TOUCH –ò –°–ö–†–û–õ–õ–ê
// ============================================================================

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ touch —Å–æ–±—ã—Ç–∏–π
 */
function initializeTouchHandlers() {
    // –í–∫–ª—é—á–∞–µ–º momentum scrolling –¥–ª—è –≤—Å–µ—Ö –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤
    const scrollableElements = document.querySelectorAll('.session-tabs, .roles-grid-compact');
    
    scrollableElements.forEach(element => {
        setupTouchScrolling(element);
    });
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç touch —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞
 * @param {HTMLElement} element - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
 */
function setupTouchScrolling(element) {
    let isDown = false;
    let startX;
    let scrollLeft;
    
    element.addEventListener('mousedown', (e) => {
        isDown = true;
        startX = e.pageX - element.offsetLeft;
        scrollLeft = element.scrollLeft;
    });
    
    element.addEventListener('mouseleave', () => {
        isDown = false;
    });
    
    element.addEventListener('mouseup', () => {
        isDown = false;
    });
    
    element.addEventListener('mousemove', (e) => {
        if (!isDown) return;
        e.preventDefault();
        const x = e.pageX - element.offsetLeft;
        const walk = (x - startX) * 2;
        element.scrollLeft = scrollLeft - walk;
    });
}

// ============================================================================
// –û–ë–†–ê–¢–ù–´–ô –û–¢–°–ß–ï–¢
// ============================================================================

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
 */
function startCountdown() {
    const deadline = new Date(CONFIG.DEADLINE);
    
    function updateCountdown() {
        const now = new Date();
        const timeLeft = deadline - now;
        
        const countdownElement = document.getElementById('countdown');
        if (!countdownElement) return;
        
        if (timeLeft > 0) {
            const { days, hours, minutes, seconds } = calculateTimeLeft(timeLeft);
            countdownElement.textContent = 
                `‚è∞ ${days}–¥ ${hours}—á ${minutes}–º ${seconds}—Å –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞`;
        } else {
            countdownElement.textContent = 'üî¥ –î–ï–î–õ–ê–ô–ù –ò–°–¢–ï–ö!';
        }
    }
    
    updateCountdown();
    setInterval(updateCountdown, 1000);
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
 * @param {number} timeLeft - –û—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –¥–Ω—è–º–∏, —á–∞—Å–∞–º–∏, –º–∏–Ω—É—Ç–∞–º–∏ –∏ —Å–µ–∫—É–Ω–¥–∞–º–∏
 */
function calculateTimeLeft(timeLeft) {
    const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
    const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);
    
    return { days, hours, minutes, seconds };
}

// ============================================================================
// –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–°–¢–ê–í–ö–û–ô –ó–ê–ì–†–£–ó–ö–ò
// ============================================================================

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞—Å—Ç–∞–≤–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
 * @async
 * @returns {Promise<void>}
 */
async function showLoadingScreen() {
    const loadingScreen = document.getElementById('loadingScreen');
    const loadingLogo = document.querySelector('.loading-logo');
    const loadingContent = document.querySelector('.loading-content');
    const loadingText = document.getElementById('loadingText');
    
    if (!loadingScreen) return;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—Å—Ç–∞–≤–∫—É
    loadingScreen.classList.remove('hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    await new Promise(resolve => setTimeout(resolve, CONFIG.LOADING_DELAYS.LOGO_DISPLAY));
    
    // –ë–ª—é—Ä–∏–º –ª–æ–≥–æ—Ç–∏–ø –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä
    loadingLogo.classList.add('blurred');
    loadingContent.style.display = 'block';
    
    await new Promise(resolve => setTimeout(resolve, CONFIG.LOADING_DELAYS.CONTENT_FADE));
    loadingContent.classList.add('visible');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–º–µ–Ω—É —Ç–µ–∫—Å—Ç–æ–≤
    startLoadingTextAnimation(loadingText);
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Å–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param {HTMLElement} textElement - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
 */
function startLoadingTextAnimation(textElement) {
    if (!textElement) return;
    
    let currentIndex = 0;
    
    const updateText = () => {
        if (textElement && currentIndex < CONFIG.LOADING_TEXTS.length) {
            textElement.textContent = CONFIG.LOADING_TEXTS[currentIndex];
            textElement.style.animation = 'none';
            
            setTimeout(() => {
                if (textElement) {
                    textElement.style.animation = 'fadeInText 0.5s ease';
                }
            }, 10);
            
            currentIndex++;
            
            if (currentIndex < CONFIG.LOADING_TEXTS.length) {
                setTimeout(updateText, CONFIG.LOADING_DELAYS.TEXT_CHANGE);
            } else {
                // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ç–µ–∫—Å—Ç–µ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞—Ç—è–Ω—É–ª–∞—Å—å
                textElement.textContent = CONFIG.LOADING_TEXTS[CONFIG.LOADING_TEXTS.length - 1];
            }
        }
    };
    
    updateText();
}

/**
 * –°–∫—Ä—ã–≤–∞–µ—Ç –∑–∞—Å—Ç–∞–≤–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
 */
function hideLoadingScreen() {
    const loadingScreen = document.getElementById('loadingScreen');
    if (loadingScreen) {
        loadingScreen.classList.add('hidden');
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            if (loadingScreen && loadingScreen.parentNode) {
                loadingScreen.style.display = 'none';
            }
        }, CONFIG.LOADING_DELAYS.SCREEN_HIDE);
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
 */
function showLoadingError() {
    const loadingText = document.getElementById('loadingText');
    const loadingError = document.getElementById('loadingError');
    const spinner = document.querySelector('.loading-spinner');
    
    if (loadingText) loadingText.style.display = 'none';
    if (spinner) spinner.style.display = 'none';
    if (loadingError) loadingError.style.display = 'block';
}

// ============================================================================
// –£–¢–ò–õ–ò–¢–´ –ò–ù–¢–ï–†–§–ï–ô–°–ê
// ============================================================================

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—É–ª—Ç–∏–ø –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 * @param {HTMLElement} element - –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É–ª—Ç–∏–ø–∞
 * @param {number} emptySlots - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
 */
window.showProgressTooltip = function(element, emptySlots) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç—É–ª—Ç–∏–ø
    const existingTooltip = document.querySelector('.progress-tooltip');
    if (existingTooltip) {
        existingTooltip.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—É–ª—Ç–∏–ø
    const tooltip = document.createElement('div');
    tooltip.className = 'progress-tooltip';
    tooltip.textContent = `–û—Å—Ç–∞–ª–æ—Å—å ${emptySlots} —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤`;
    
    // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    const rect = element.getBoundingClientRect();
    tooltip.style.left = rect.left + (rect.width / 2) + 'px';
    tooltip.style.top = (rect.top - 40) + 'px';
    
    document.body.appendChild(tooltip);
    
    // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    setTimeout(() => {
        tooltip.remove();
    }, CONFIG.TOOLTIP_TIMEOUT);
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏ –∫–ª–∏–∫–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ
    document.addEventListener('click', function removeTooltip() {
        tooltip.remove();
        document.removeEventListener('click', removeTooltip);
    });
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ç–∞–±–æ–≤
 * @param {string} sessionKey - –ö–ª—é—á —Å–µ—Å—Å–∏–∏
 */
window.checkTabsScroll = function(sessionKey) {
    const wrapper = document.getElementById(`tabs-wrapper-${sessionKey}`);
    const tabs = wrapper?.querySelector('.session-tabs');
    
    if (!tabs) return;
    
    const isScrollable = tabs.scrollWidth > tabs.clientWidth;
    const isAtEnd = tabs.scrollLeft + tabs.clientWidth >= tabs.scrollWidth - CONFIG.SCROLL_THRESHOLD;
    
    if (isScrollable && !isAtEnd) {
        wrapper.classList.add('scrollable');
    } else {
        wrapper.classList.remove('scrollable');
    }
};

// ============================================================================
// –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê
// ============================================================================

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
function updateInterface() {
    updateMenu();
    renderSchedule();
    updateProgress();
}

// ============================================================================
// –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° TELEGRAM
// ============================================================================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
window.addEventListener('dataLoaded', () => {
    handleTelegramIntegration();
});

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram
 */
function handleTelegramIntegration() {
    const telegramUser = window.telegramUtils?.telegramUser;
    if (!telegramUser || participants.length === 0) return;
    
    console.log('ü§ñ –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', telegramUser);
    
    // –ò—â–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ Telegram ID –∏–ª–∏ username
    const match = findParticipantByTelegram(telegramUser);
    
    if (match) {
        console.log('‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω:', match.name);
        setupTelegramUser(match);
    } else {
        console.log('‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ');
    }
}

/**
 * –ò—â–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ Telegram –¥–∞–Ω–Ω—ã–º
 * @param {Object} telegramUser - –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @returns {Object|null} –ù–∞–π–¥–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –∏–ª–∏ null
 */
function findParticipantByTelegram(telegramUser) {
    return participants.find(p => {
        const idMatch = p.telegramId && p.telegramId.toString() === telegramUser.id.toString();
        const userMatch = p.telegram && telegramUser.username && 
                         p.telegram.replace('@', '').toLowerCase() === telegramUser.username.toLowerCase();
        return idMatch || userMatch;
    });
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @param {Object} match - –ù–∞–π–¥–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
 */
function setupTelegramUser(match) {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º currentUser –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    window.currentUser = match.name;
    currentUser = match.name;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (typeof initializeTelegramUser === 'function') {
        initializeTelegramUser(match.name);
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º
    const userMode = determineUserMode(match);
    setMode(userMode);
    
    console.log(`üë§ –†–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userMode}, currentUser: ${window.currentUser}`);
}

// ============================================================================
// –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
// ============================================================================

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 * @param {string} message - –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
 */
function showErrorMessage(message) {
    const container = document.getElementById('schedule');
    if (!container) return;
    
    container.innerHTML = `
        <div style="text-align: center; padding: 40px;">
            <div style="font-size: 2em; margin-bottom: 16px;">‚ùå</div>
            <div style="font-size: 1.2em; color: var(--error-color); margin-bottom: 16px;">
                –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            </div>
            <div style="color: var(--text-secondary); margin-bottom: 16px;">
                ${message}
            </div>
            <button onclick="location.reload()" style="background: var(--accent-primary); color: white; border: none; padding: 12px 24px; border-radius: 8px; cursor: pointer;">
                –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
        </div>
    `;
}

// ============================================================================
// –û–¢–õ–ê–î–ö–ê –ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
// ============================================================================

/**
 * –§—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 */
window.debugBookingSystem = function() {
    console.log('üîç === –û–¢–õ–ê–î–ö–ê –°–ò–°–¢–ï–ú–´ –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø ===');
    
    console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
    console.log('  window.currentUser:', window.currentUser);
    console.log('  currentUser (–ª–æ–∫–∞–ª—å–Ω—ã–π):', typeof currentUser !== 'undefined' ? currentUser : '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
    
    console.log('üéØ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–ø–∞–ø–∞:');
    console.log('  window.currentPopupSession:', window.currentPopupSession);
    console.log('  window.currentPopupRole:', window.currentPopupRole);
    console.log('  window.pendingAssignment:', window.pendingAssignment);
    
    console.log('üîß –§—É–Ω–∫—Ü–∏–∏:');
    console.log('  openBookShiftPopup:', typeof window.openBookShiftPopup);
    console.log('  confirmBookShift:', typeof window.confirmBookShift);
    console.log('  completeAssignment:', typeof window.completeAssignment);
    console.log('  handleRoleSlotClick:', typeof window.handleRoleSlotClick);
    
    console.log('üìä –î–∞–Ω–Ω—ã–µ:');
    console.log('  assignments keys:', Object.keys(window.assignments || {}));
    console.log('  participants:', window.participants?.length || 0);
    
    return {
        currentUser: window.currentUser,
        popupSession: window.currentPopupSession,
        popupRole: window.currentPopupRole,
        pendingAssignment: window.pendingAssignment
    };
};

// ============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï DOM
// ============================================================================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
 */
document.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    initializeTelegramWebApp();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—Å—Ç–∞–≤–∫—É —Å—Ä–∞–∑—É –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    init().catch(error => {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error);
        showLoadingError();
    });
});

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Telegram WebApp
 */
function initializeTelegramWebApp() {
    const tg = window.Telegram?.WebApp;
    if (tg) {
        console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp...');
        tg.ready();
        tg.expand();
    }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Ä—Å–∏—é –≤ —Ñ—É—Ç–µ—Ä–µ
 */
function updateFooterVersion() {
    const versionSpan = document.getElementById('appVersion');
    if (versionSpan) {
        versionSpan.textContent = window.appVersion;
    }
}

// ============================================================================
// –ì–õ–û–ë–ê–õ–¨–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–®–ò–ë–û–ö
// ============================================================================

/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
 */
window.addEventListener('error', (event) => {
    console.error('üö® –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

// ============================================================================
// –≠–ö–°–ü–û–†–¢ –ò –ó–ê–í–ï–†–®–ï–ù–ò–ï
// ============================================================================

console.log('üéØ Main.js –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
